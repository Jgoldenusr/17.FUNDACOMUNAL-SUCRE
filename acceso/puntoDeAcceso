//Dependencias del modulo.
let app = require("../app");
let debug = require("debug")("fundacomunal-sucre:server");
let http = require("http");
require("dotenv").config();

//Se busca el puerto si estÃ¡ en la variable de entorno, si no se usa 3000 por defecto.
let port = normalizePort(process.env.PUERTO || "3000");
app.set("port", port);

//Se crea el servidor HTTP.
let server = http.createServer(app);

//Se empieza a escuchar en el puerto.
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

//Se normaliza el puerto en un numero, una cadena o se regresa 'false'.
function normalizePort(val) {
  let port = parseInt(val, 10);
  if (isNaN(port)) {
    return val;
  }
  if (port >= 0) {
    return port;
  }
  return false;
}

//En caso de error se activa esta funcion.
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }
  let bind = typeof port === "string" ? "Pipe " + port : "Port " + port;
  // Se manejan algunos errores...
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

//Un event listener para algunos eventos HTTP.
function onListening() {
  let addr = server.address();
  let bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
